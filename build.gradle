buildscript {
  ext {
    releasePluginV = '2.3.5'
    springBootV = '2.0.0.M4'
    versionV = "0.15.0"
  }

  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven { url 'https://repo.spring.io/libs-milestone' }
  }

  dependencies {
    classpath "net.researchgate:gradle-release:$releasePluginV"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootV"
    classpath "com.github.ben-manes:gradle-versions-plugin:$versionV"
  }
}

allprojects {
  group 'com.rivigo.zoom'

  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  apply plugin: 'application'
  apply plugin: 'net.researchgate.release'
  apply plugin: 'org.springframework.boot'
  apply plugin: 'com.github.ben-manes.versions'

  ext {
    artifactoryRepo = project.properties.containsKey("releaseVersion") ? "libs-release-local" : "libs-snapshot-local"
  }

  configurations {
    all*.exclude group: "org.hibernate", module: "hibernate-entitymanager"
    all*.exclude group: "org.apache.tomcat", module: "tomcat-jdbc"
  }

  configurations {
    deployerJars
  }

  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven { url 'https://repo.spring.io/libs-milestone' }
  }

  dependencies {
    deployerJars "org.apache.maven.wagon:wagon-http:$deployerJarsV"
  }


  release {
    tagTemplate = '$name-$version'
  }

  task(startmessage) << {
    println 'starting build'
  }

  task(printversion) << {
    println project.version
  }

  beforeReleaseBuild.dependsOn startmessage
  afterReleaseBuild.dependsOn printversion
}

subprojects {

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  configurations {
    slf4j
    logback

    lombok

    jacksonDatabind

    fj
    fjCore
    fjJava8
    fjQuickcheck

    springBootWeb
    springBootJdbc
    springBootSecurity
    springBootActuator

    jdbi
    jdbiSqlObject
    jdbiPostgres

    postgresql
    hikari

    validationApi
    hibernateValidator
    modelMapper

    flyway

    springBootTest
    junit
    h2
    flywayTestExtension
  }

  dependencies {
    slf4j "org.slf4j:slf4j-api:$slf4jV"
    logback "ch.qos.logback:logback-classic:$logbackV"

    lombok "org.projectlombok:lombok:$lombokV"

    fj "org.functionaljava:functionaljava:$fjV"
    fjCore "org.functionaljava:functionaljava-java-core:$fjV"
    fjJava8 "org.functionaljava:functionaljava-java8:$fjV"
    fjQuickcheck "org.functionaljava:functionaljava-quickcheck:$fjV"

    springBootWeb "org.springframework.boot:spring-boot-starter-web:$springBootV"
    springBootActuator "org.springframework.boot:spring-boot-starter-actuator:$springBootV"
    springBootSecurity "org.springframework.boot:spring-boot-starter-security:$springBootV"
    springBootJdbc("org.springframework.boot:spring-boot-starter-jdbc:$springBootV") {
      exclude group: "org.apache.tomcat", module: "tomcat-jdbc"
    }

    jacksonDatabind "com.fasterxml.jackson.core:jackson-databind:$jacksonV"

    jdbi "org.jdbi:jdbi3:$jdbiV"
    jdbiSqlObject "org.jdbi:jdbi3-sqlobject:$jdbiV"
    jdbiPostgres "org.jdbi:jdbi3-postgres:$jdbiV"

    postgresql "org.postgresql:postgresql:$postgresV"
    hikari "com.zaxxer:HikariCP:$hikariV"

    validationApi "javax.validation:validation-api:$validationApiV"
    hibernateValidator "org.hibernate.validator:hibernate-validator:$hibernateValidatorV"
    modelMapper "org.modelmapper:modelmapper:$modelmapperV"

    flyway "org.flywaydb:flyway-core:$flywayV"

    //////////////// Testing dependencies //////////////////
    springBootTest "org.springframework.boot:spring-boot-starter-test:$springBootV"
    junit "junit:junit:$junitV"
    h2 "com.h2database:h2:$h2V"
    flywayTestExtension "org.flywaydb.flyway-test-extensions:flyway-spring-test:$flywayTestExtensionsV"
  }
}
